---
services:

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
        - monitoring-net
    ports:
        - 9090:9090
    command:
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.retention.time=${RETENTION_TIME:-8d}
    volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
        - prometheus-data:/prometheus
    depends_on:
        #- node_exporter
        - cadvisor
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    #ports:
        #- 9100:9100
    networks:
        - monitoring-net
    volumes:
        - /proc:/host/proc:ro
        - /sys:/host/sys:ro
        - /:/rootfs:ro
    command:
        - --path.procfs=/host/proc
        - --path.rootfs=/rootfs
        - --path.sysfs=/host/sys
        - --collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)
    restart: unless-stopped

  cadvisor:
    # image: budry/cadvisor-arm:latest
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    #ports:
        #- 8080:8080
    networks:
        - monitoring-net
    volumes:
        - /:/rootfs:ro
        #- /var/run:/var/run:ro # Does not work for docker desktop on OSX
        - /var/run/docker.sock:/var/run/docker.sock:ro # Workaround for OSX
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
        - /dev/disk/:/dev/disk:ro
    devices:
        - /dev/kmsg
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: ${UID:-1000}:${GID:-1000}
    networks:
        - monitoring-net
    ports:
        - 3000:3000
    volumes:
        - grafana-data:/var/lib/grafana
    depends_on:
        - prometheus

networks:
    monitoring-net:
        driver: bridge

volumes:
    prometheus-data:
        driver: local
    grafana-data:
        driver: local
